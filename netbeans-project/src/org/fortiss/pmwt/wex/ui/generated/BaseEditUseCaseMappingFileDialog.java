package org.fortiss.pmwt.wex.ui.generated;

import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.BorderFactory;

import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.table.DefaultTableModel;

public class BaseEditUseCaseMappingFileDialog extends javax.swing.JDialog implements ActionListener, ComponentListener, PropertyChangeListener
{

	public BaseEditUseCaseMappingFileDialog( JFrame ownerFrame )
	{
		super( ownerFrame );
		initComponents();
	}

	/**
	 * Creates new form BasePrepareInputDataPage1
	 */
	public BaseEditUseCaseMappingFileDialog()
	{
		super();
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlUseCaseMapping = new JPanel();
        spUseCaseMapping = new JScrollPane();
        tabUseCaseMapping = new JTable();
        pnlOptions0 = new JPanel();
        lblSessionMustStartWithUseCase = new JLabel();
        lblSessionMustEndWithUseCase = new JLabel();
        txtSessionMustStartWithUseCase = new JTextField();
        txtSessionMustEndWithUseCase = new JTextField();
        lblTransitionThresholdTime = new JLabel();
        txtTransitionThresholdTime = new JTextField();
        pnlBottom = new JPanel();
        btnSaveAndClose = new JButton();
        btnSave = new JButton();

        setTitle("State filter");
        setBounds(new Rectangle(0, 0, 800, 600));
        setLocationByPlatform(true);
        setMinimumSize(new Dimension(800, 600));
        setModalityType(ModalityType.APPLICATION_MODAL);
        setName("wndPrepareInputPage2"); // NOI18N
        setResizable(false);
        setType(Type.UTILITY);
        addComponentListener(this);

        pnlUseCaseMapping.setBorder(BorderFactory.createTitledBorder("State mapping"));

        tabUseCaseMapping.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Extracted state", "Modified state", "Remove state", "Mandatory state"
            }
        ) {
            Class[] types = new Class [] {
                String.class, String.class, Boolean.class, Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabUseCaseMapping.addPropertyChangeListener(this);
        spUseCaseMapping.setViewportView(tabUseCaseMapping);

        GroupLayout pnlUseCaseMappingLayout = new GroupLayout(pnlUseCaseMapping);
        pnlUseCaseMapping.setLayout(pnlUseCaseMappingLayout);
        pnlUseCaseMappingLayout.setHorizontalGroup(pnlUseCaseMappingLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(pnlUseCaseMappingLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(pnlUseCaseMappingLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(spUseCaseMapping, GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        pnlUseCaseMappingLayout.setVerticalGroup(pnlUseCaseMappingLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 375, Short.MAX_VALUE)
            .addGroup(pnlUseCaseMappingLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(pnlUseCaseMappingLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(spUseCaseMapping, GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pnlOptions0.setBorder(BorderFactory.createTitledBorder("Options"));

        lblSessionMustStartWithUseCase.setText("Session must start with state:");
        lblSessionMustStartWithUseCase.setMaximumSize(new Dimension(150, 20));
        lblSessionMustStartWithUseCase.setMinimumSize(new Dimension(150, 20));
        lblSessionMustStartWithUseCase.setPreferredSize(new Dimension(150, 20));

        lblSessionMustEndWithUseCase.setText("Session must end with state:");
        lblSessionMustEndWithUseCase.setMaximumSize(new Dimension(150, 20));
        lblSessionMustEndWithUseCase.setMinimumSize(new Dimension(150, 20));
        lblSessionMustEndWithUseCase.setPreferredSize(new Dimension(150, 20));

        txtSessionMustStartWithUseCase.setMaximumSize(new Dimension(200, 30));
        txtSessionMustStartWithUseCase.setMinimumSize(new Dimension(200, 30));
        txtSessionMustStartWithUseCase.setPreferredSize(new Dimension(200, 30));

        txtSessionMustEndWithUseCase.setMaximumSize(new Dimension(200, 30));
        txtSessionMustEndWithUseCase.setMinimumSize(new Dimension(200, 30));
        txtSessionMustEndWithUseCase.setPreferredSize(new Dimension(200, 30));

        lblTransitionThresholdTime.setText("Transition threshold time (in ms):");
        lblTransitionThresholdTime.setMaximumSize(new Dimension(150, 20));
        lblTransitionThresholdTime.setMinimumSize(new Dimension(150, 20));
        lblTransitionThresholdTime.setPreferredSize(new Dimension(150, 20));

        txtTransitionThresholdTime.setMaximumSize(new Dimension(200, 30));
        txtTransitionThresholdTime.setMinimumSize(new Dimension(200, 30));
        txtTransitionThresholdTime.setPreferredSize(new Dimension(200, 30));

        GroupLayout pnlOptions0Layout = new GroupLayout(pnlOptions0);
        pnlOptions0.setLayout(pnlOptions0Layout);
        pnlOptions0Layout.setHorizontalGroup(pnlOptions0Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlOptions0Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOptions0Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(lblSessionMustStartWithUseCase, GroupLayout.PREFERRED_SIZE, 200, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSessionMustStartWithUseCase, GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlOptions0Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblSessionMustEndWithUseCase, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSessionMustEndWithUseCase, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlOptions0Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(pnlOptions0Layout.createSequentialGroup()
                        .addComponent(lblTransitionThresholdTime, GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                        .addGap(150, 150, 150))
                    .addGroup(pnlOptions0Layout.createSequentialGroup()
                        .addComponent(txtTransitionThresholdTime, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlOptions0Layout.setVerticalGroup(pnlOptions0Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlOptions0Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOptions0Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addGroup(GroupLayout.Alignment.LEADING, pnlOptions0Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSessionMustEndWithUseCase, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTransitionThresholdTime, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblSessionMustStartWithUseCase, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlOptions0Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSessionMustStartWithUseCase, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSessionMustEndWithUseCase, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTransitionThresholdTime, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        btnSaveAndClose.setText("Save & Close");
        btnSaveAndClose.setMaximumSize(new Dimension(140, 30));
        btnSaveAndClose.setMinimumSize(new Dimension(140, 30));
        btnSaveAndClose.setPreferredSize(new Dimension(140, 30));
        btnSaveAndClose.addActionListener(this);

        btnSave.setText("Save");
        btnSave.setMaximumSize(new Dimension(140, 30));
        btnSave.setMinimumSize(new Dimension(140, 30));
        btnSave.setPreferredSize(new Dimension(140, 30));
        btnSave.addActionListener(this);

        GroupLayout pnlBottomLayout = new GroupLayout(pnlBottom);
        pnlBottom.setLayout(pnlBottomLayout);
        pnlBottomLayout.setHorizontalGroup(pnlBottomLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, pnlBottomLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSaveAndClose, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlBottomLayout.setVerticalGroup(pnlBottomLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, pnlBottomLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlBottomLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveAndClose, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(pnlOptions0, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlUseCaseMapping, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBottom, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlUseCaseMapping, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlOptions0, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlBottom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.

    public void actionPerformed(ActionEvent evt) {
        if (evt.getSource() == btnSaveAndClose) {
            BaseEditUseCaseMappingFileDialog.this.btnSaveAndCloseActionPerformed(evt);
        }
        else if (evt.getSource() == btnSave) {
            BaseEditUseCaseMappingFileDialog.this.btnSaveActionPerformed(evt);
        }
    }

    public void componentHidden(ComponentEvent evt) {
    }

    public void componentMoved(ComponentEvent evt) {
    }

    public void componentResized(ComponentEvent evt) {
    }

    public void componentShown(ComponentEvent evt) {
        if (evt.getSource() == BaseEditUseCaseMappingFileDialog.this) {
            BaseEditUseCaseMappingFileDialog.this.formComponentShown(evt);
        }
    }

    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getSource() == tabUseCaseMapping) {
            BaseEditUseCaseMappingFileDialog.this.tabUseCaseMappingPropertyChange(evt);
        }
    }// </editor-fold>//GEN-END:initComponents

    private void txtSessionMustEndWithUseCaseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_txtSessionMustEndWithUseCaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSessionMustEndWithUseCaseActionPerformed

	protected void btnSaveAndCloseActionPerformed( ActionEvent evt )
	{// GEN-FIRST:event_btnSaveAndCloseActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_btnSaveAndCloseActionPerformed

	protected void formComponentShown( ComponentEvent evt )
	{// GEN-FIRST:event_formComponentShown
		// TODO add your handling code here:
	}// GEN-LAST:event_formComponentShown

	protected void tabUseCaseMappingPropertyChange( PropertyChangeEvent evt )
	{// GEN-FIRST:event_tabUseCaseMappingPropertyChange
		// TODO add your handling code here:
	}// GEN-LAST:event_tabUseCaseMappingPropertyChange

	protected void btnSaveActionPerformed( ActionEvent evt )
	{// GEN-FIRST:event_btnSaveActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:even// GEN-LAST:event_btnSaveActionPerformed// GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected JButton btnSave;
    protected JButton btnSaveAndClose;
    protected JLabel lblSessionMustEndWithUseCase;
    protected JLabel lblSessionMustStartWithUseCase;
    protected JLabel lblTransitionThresholdTime;
    protected JPanel pnlBottom;
    protected JPanel pnlOptions0;
    protected JPanel pnlUseCaseMapping;
    protected JScrollPane spUseCaseMapping;
    protected JTable tabUseCaseMapping;
    protected JTextField txtSessionMustEndWithUseCase;
    protected JTextField txtSessionMustStartWithUseCase;
    protected JTextField txtTransitionThresholdTime;
    // End of variables declaration//GEN-END:variables
}
