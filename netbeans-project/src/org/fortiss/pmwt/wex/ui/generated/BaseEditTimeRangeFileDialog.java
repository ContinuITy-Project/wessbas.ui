package org.fortiss.pmwt.wex.ui.generated;

import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import javax.swing.BorderFactory;

import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

public class BaseEditTimeRangeFileDialog extends javax.swing.JDialog implements ActionListener, ComponentListener, ChangeListener
{

	public BaseEditTimeRangeFileDialog( JFrame frameOwner )
	{
		super( frameOwner );
		initComponents();
	}

	/**
	 * Creates new form BasePrepareInputDataPage1
	 */
	public BaseEditTimeRangeFileDialog()
	{
		super();
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlInformation = new JPanel();
        lblTimestampFrom = new JLabel();
        txtTimestampFrom = new JTextField();
        txtTimestampTo = new JTextField();
        lblTimestampTo = new JLabel();
        lblTimestampCount = new JLabel();
        txtTimestampCount = new JTextField();
        btnAnalyze = new JButton();
        pnlCrop = new JPanel();
        lblRemoveFromTheLeft = new JLabel();
        sliRemoveFromTheLeft = new JSlider();
        txtRemoveFromTheLeft = new JTextField();
        lblRemoveFromTheRight = new JLabel();
        sliRemoveFromTheRight = new JSlider();
        txtRemoveFromTheRight = new JTextField();
        pnlBottom = new JPanel();
        btnSave = new JButton();
        btnSaveAndClose = new JButton();
        pnlFilterResult = new JPanel();
        lblCropMinutesFromTheLeft = new JLabel();
        txtCropMinutesFromTheLeft = new JTextField();
        txtCropMinutesFromTheRight = new JTextField();
        lblCropMinutesFromTheRight = new JLabel();

        setTitle("Time range filter");
        setBounds(new Rectangle(0, 0, 660, 450));
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        setMinimumSize(new Dimension(660, 470));
        setModalityType(ModalityType.APPLICATION_MODAL);
        setName("wndPrepareInputPage2"); // NOI18N
        setResizable(false);
        setType(Type.UTILITY);
        addComponentListener(this);

        pnlInformation.setBorder(BorderFactory.createTitledBorder("General information"));
        pnlInformation.setMaximumSize(new Dimension(640, 140));
        pnlInformation.setMinimumSize(new Dimension(640, 140));
        pnlInformation.setPreferredSize(new Dimension(640, 140));

        lblTimestampFrom.setText("First session starts at:");
        lblTimestampFrom.setMaximumSize(new Dimension(150, 20));
        lblTimestampFrom.setMinimumSize(new Dimension(150, 20));
        lblTimestampFrom.setPreferredSize(new Dimension(150, 20));

        txtTimestampFrom.setEditable(false);
        txtTimestampFrom.setMinimumSize(new Dimension(200, 30));
        txtTimestampFrom.setPreferredSize(new Dimension(200, 30));

        txtTimestampTo.setEditable(false);
        txtTimestampTo.setMinimumSize(new Dimension(200, 30));
        txtTimestampTo.setPreferredSize(new Dimension(200, 30));

        lblTimestampTo.setText("Last session ends at:");
        lblTimestampTo.setToolTipText("");
        lblTimestampTo.setMaximumSize(new Dimension(150, 20));
        lblTimestampTo.setMinimumSize(new Dimension(150, 20));
        lblTimestampTo.setPreferredSize(new Dimension(150, 20));

        lblTimestampCount.setText("Data duration:");
        lblTimestampCount.setMaximumSize(new Dimension(150, 20));
        lblTimestampCount.setMinimumSize(new Dimension(150, 20));
        lblTimestampCount.setPreferredSize(new Dimension(150, 20));

        txtTimestampCount.setEditable(false);
        txtTimestampCount.setMinimumSize(new Dimension(200, 30));
        txtTimestampCount.setPreferredSize(new Dimension(200, 30));

        btnAnalyze.setText("Analyze");
        btnAnalyze.setMaximumSize(new Dimension(140, 30));
        btnAnalyze.setMinimumSize(new Dimension(140, 30));
        btnAnalyze.setPreferredSize(new Dimension(140, 30));
        btnAnalyze.addActionListener(this);

        GroupLayout pnlInformationLayout = new GroupLayout(pnlInformation);
        pnlInformation.setLayout(pnlInformationLayout);
        pnlInformationLayout.setHorizontalGroup(pnlInformationLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInformationLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGroup(pnlInformationLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTimestampFrom, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTimestampFrom, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInformationLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTimestampTo, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTimestampTo, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInformationLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInformationLayout.createSequentialGroup()
                                .addComponent(lblTimestampCount, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 76, Short.MAX_VALUE))
                            .addComponent(txtTimestampCount, GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                    .addGroup(GroupLayout.Alignment.TRAILING, pnlInformationLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAnalyze, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlInformationLayout.setVerticalGroup(pnlInformationLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, pnlInformationLayout.createSequentialGroup()
                .addGroup(pnlInformationLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimestampFrom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimestampTo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimestampCount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInformationLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimestampFrom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimestampTo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimestampCount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAnalyze, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pnlCrop.setBorder(BorderFactory.createTitledBorder("Filter data by time"));
        pnlCrop.setMaximumSize(new Dimension(640, 32767));
        pnlCrop.setMinimumSize(new Dimension(640, 0));
        pnlCrop.setPreferredSize(new Dimension(640, 123));

        lblRemoveFromTheLeft.setText("Remove minutes from the left:");
        lblRemoveFromTheLeft.setMaximumSize(new Dimension(200, 20));
        lblRemoveFromTheLeft.setMinimumSize(new Dimension(200, 20));
        lblRemoveFromTheLeft.setPreferredSize(new Dimension(200, 20));

        sliRemoveFromTheLeft.setMaximumSize(new Dimension(32767, 30));
        sliRemoveFromTheLeft.setMinimumSize(new Dimension(36, 30));
        sliRemoveFromTheLeft.setPreferredSize(new Dimension(200, 30));
        sliRemoveFromTheLeft.addChangeListener(this);

        txtRemoveFromTheLeft.setEditable(false);
        txtRemoveFromTheLeft.setText("0%");
        txtRemoveFromTheLeft.setMinimumSize(new Dimension(50, 30));
        txtRemoveFromTheLeft.setPreferredSize(new Dimension(50, 30));

        lblRemoveFromTheRight.setText("Remove minutes from the right:");
        lblRemoveFromTheRight.setMaximumSize(new Dimension(200, 20));
        lblRemoveFromTheRight.setMinimumSize(new Dimension(200, 20));
        lblRemoveFromTheRight.setPreferredSize(new Dimension(200, 20));

        sliRemoveFromTheRight.setMaximumSize(new Dimension(32767, 30));
        sliRemoveFromTheRight.setMinimumSize(new Dimension(36, 30));
        sliRemoveFromTheRight.setPreferredSize(new Dimension(200, 30));
        sliRemoveFromTheRight.addChangeListener(this);

        txtRemoveFromTheRight.setEditable(false);
        txtRemoveFromTheRight.setText("0%");
        txtRemoveFromTheRight.setMinimumSize(new Dimension(50, 30));
        txtRemoveFromTheRight.setPreferredSize(new Dimension(50, 30));

        GroupLayout pnlCropLayout = new GroupLayout(pnlCrop);
        pnlCrop.setLayout(pnlCropLayout);
        pnlCropLayout.setHorizontalGroup(pnlCropLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlCropLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCropLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCropLayout.createSequentialGroup()
                        .addGroup(pnlCropLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(lblRemoveFromTheLeft, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRemoveFromTheRight, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlCropLayout.createSequentialGroup()
                        .addGroup(pnlCropLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                            .addComponent(sliRemoveFromTheRight, GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                            .addComponent(sliRemoveFromTheLeft, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlCropLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(txtRemoveFromTheLeft, GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                            .addComponent(txtRemoveFromTheRight, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnlCropLayout.setVerticalGroup(pnlCropLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlCropLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRemoveFromTheLeft, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCropLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(sliRemoveFromTheLeft, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRemoveFromTheLeft, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCropLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlCropLayout.createSequentialGroup()
                        .addComponent(lblRemoveFromTheRight, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sliRemoveFromTheRight, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtRemoveFromTheRight, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSave.setText("Save");
        btnSave.setMaximumSize(new Dimension(140, 30));
        btnSave.setMinimumSize(new Dimension(140, 30));
        btnSave.setPreferredSize(new Dimension(140, 30));
        btnSave.addActionListener(this);

        btnSaveAndClose.setText("Save & Close");
        btnSaveAndClose.setMaximumSize(new Dimension(140, 30));
        btnSaveAndClose.setMinimumSize(new Dimension(140, 30));
        btnSaveAndClose.setPreferredSize(new Dimension(140, 30));
        btnSaveAndClose.addActionListener(this);

        GroupLayout pnlBottomLayout = new GroupLayout(pnlBottom);
        pnlBottom.setLayout(pnlBottomLayout);
        pnlBottomLayout.setHorizontalGroup(pnlBottomLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, pnlBottomLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSaveAndClose, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlBottomLayout.setVerticalGroup(pnlBottomLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlBottomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBottomLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveAndClose, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlFilterResult.setBorder(BorderFactory.createTitledBorder("Filter result"));

        lblCropMinutesFromTheLeft.setText("Remove minutes from the left:");
        lblCropMinutesFromTheLeft.setMaximumSize(new Dimension(150, 20));
        lblCropMinutesFromTheLeft.setMinimumSize(new Dimension(150, 20));
        lblCropMinutesFromTheLeft.setPreferredSize(new Dimension(150, 20));

        txtCropMinutesFromTheLeft.setMinimumSize(new Dimension(200, 30));
        txtCropMinutesFromTheLeft.setPreferredSize(new Dimension(200, 30));

        txtCropMinutesFromTheRight.setMinimumSize(new Dimension(200, 30));
        txtCropMinutesFromTheRight.setPreferredSize(new Dimension(200, 30));

        lblCropMinutesFromTheRight.setText("Remove minutes from the right:");
        lblCropMinutesFromTheRight.setToolTipText("");
        lblCropMinutesFromTheRight.setMaximumSize(new Dimension(150, 20));
        lblCropMinutesFromTheRight.setMinimumSize(new Dimension(150, 20));
        lblCropMinutesFromTheRight.setPreferredSize(new Dimension(150, 20));

        GroupLayout pnlFilterResultLayout = new GroupLayout(pnlFilterResult);
        pnlFilterResult.setLayout(pnlFilterResultLayout);
        pnlFilterResultLayout.setHorizontalGroup(pnlFilterResultLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterResultLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFilterResultLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFilterResultLayout.createSequentialGroup()
                        .addComponent(lblCropMinutesFromTheLeft, GroupLayout.PREFERRED_SIZE, 200, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCropMinutesFromTheRight, GroupLayout.PREFERRED_SIZE, 200, GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFilterResultLayout.createSequentialGroup()
                        .addComponent(txtCropMinutesFromTheLeft, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCropMinutesFromTheRight, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(212, Short.MAX_VALUE))
        );
        pnlFilterResultLayout.setVerticalGroup(pnlFilterResultLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterResultLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFilterResultLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCropMinutesFromTheLeft, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCropMinutesFromTheRight, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFilterResultLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCropMinutesFromTheLeft, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCropMinutesFromTheRight, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(pnlCrop, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlInformation, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBottom, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlFilterResult, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlInformation, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCrop, GroupLayout.PREFERRED_SIZE, 163, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlFilterResult, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBottom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.

    public void actionPerformed(ActionEvent evt) {
        if (evt.getSource() == btnAnalyze) {
            BaseEditTimeRangeFileDialog.this.btnAnalyzeActionPerformed(evt);
        }
        else if (evt.getSource() == btnSave) {
            BaseEditTimeRangeFileDialog.this.btnSaveActionPerformed(evt);
        }
        else if (evt.getSource() == btnSaveAndClose) {
            BaseEditTimeRangeFileDialog.this.btnSaveAndCloseActionPerformed(evt);
        }
    }

    public void componentHidden(ComponentEvent evt) {
    }

    public void componentMoved(ComponentEvent evt) {
    }

    public void componentResized(ComponentEvent evt) {
    }

    public void componentShown(ComponentEvent evt) {
        if (evt.getSource() == BaseEditTimeRangeFileDialog.this) {
            BaseEditTimeRangeFileDialog.this.formComponentShown(evt);
        }
    }

    public void stateChanged(ChangeEvent evt) {
        if (evt.getSource() == sliRemoveFromTheLeft) {
            BaseEditTimeRangeFileDialog.this.sliRemoveFromTheLeftStateChanged(evt);
        }
        else if (evt.getSource() == sliRemoveFromTheRight) {
            BaseEditTimeRangeFileDialog.this.sliRemoveFromTheRightStateChanged(evt);
        }
    }// </editor-fold>//GEN-END:initComponents

    protected void btnAnalyzeActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnAnalyzeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAnalyzeActionPerformed

	protected void btnSaveActionPerformed( ActionEvent evt )
	{// GEN-FIRST:event_btnSaveActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_btnSaveActionPerformed

	protected void formComponentShown( ComponentEvent evt )
	{// GEN-FIRST:event_formComponentShown
		// TODO add your handling code here:
	}// GEN-LAST:event_formComponentShown

	protected void sliRemoveFromTheRightStateChanged( ChangeEvent evt )
	{// GEN-FIRST:event_sliRemoveFromTheRightStateChanged
		// TODO add your handling code here:
	}// GEN-LAST:event_sliRemoveFromTheRightStateChanged

	protected void sliRemoveFromTheLeftStateChanged( ChangeEvent evt )
	{// GEN-FIRST:event_sliRemoveFromTheLeftStateChanged
		// TODO add your handling code here:
	}// GEN-LAST:event_sliRemoveFromTheLeftStateChanged

	protected void btnSaveAndCloseActionPerformed( ActionEvent evt )
	{// GEN-FIRST:event_btnSaveAndCloseActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_btnSaveAndCloseActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected JButton btnAnalyze;
    protected JButton btnSave;
    protected JButton btnSaveAndClose;
    protected JLabel lblCropMinutesFromTheLeft;
    protected JLabel lblCropMinutesFromTheRight;
    protected JLabel lblRemoveFromTheLeft;
    protected JLabel lblRemoveFromTheRight;
    protected JLabel lblTimestampCount;
    protected JLabel lblTimestampFrom;
    protected JLabel lblTimestampTo;
    protected JPanel pnlBottom;
    protected JPanel pnlCrop;
    protected JPanel pnlFilterResult;
    protected JPanel pnlInformation;
    protected JSlider sliRemoveFromTheLeft;
    protected JSlider sliRemoveFromTheRight;
    protected JTextField txtCropMinutesFromTheLeft;
    protected JTextField txtCropMinutesFromTheRight;
    protected JTextField txtRemoveFromTheLeft;
    protected JTextField txtRemoveFromTheRight;
    protected JTextField txtTimestampCount;
    protected JTextField txtTimestampFrom;
    protected JTextField txtTimestampTo;
    // End of variables declaration//GEN-END:variables
}
